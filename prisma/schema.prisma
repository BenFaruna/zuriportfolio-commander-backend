generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum STATUS {
    pending
    complete
    failed
}

enum ADMIN_STATUS {
    pending
    review
    approved
    blacklist
}

enum Discount_type {
    Percentage
    Fixed
}

enum Promo_type {
    Discount
}

enum product_status {
    active
    temporary
}

enum shop_status {
    active
    temporary
}

model user {
    id              String            @id @unique
    username        String
    first_name      String
    last_name       String
    email           String
    section_order   String?
    password        String?
    provider        String?
    is_verified     Boolean           @default(false)
    two_factor_auth Boolean           @default(false)
    location        String?
    country         String?
    profile_pic     String?
    refreshToken    String
    createdAt       DateTime          @default(now())
    orders          order[]           @relation(name: "merchant_orders")
    customer        order[]           @relation(name: "customer_orders")
    revenue         revenue[]
    promotion       promotion[]
    track_promotion track_promotion[]
    shop            shop[]
    prmo_product    promo_product[]
}

model order {
    id         String   @id
    type       String
    quantity   Int
    amount     Float
    subtotal   Float?
    VAT        Float?
    productId  String
    merchantId String
    customerId String
    promo      Int?
    status     STATUS   @default(pending)
    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    merchant user @relation(name: "merchant_orders", fields: [merchantId], references: [id])
    customer user @relation(name: "customer_orders", fields: [customerId], references: [id])
}

model product {
    id             String       @id @unique
    user_id        String
    shop_id        String
    name           String
    description    String
    quantity       Int
    category_id    Int? // this isn't meant to be there.
    image_id       Int? // same as this
    price          Float
    discount_price Float // this might be some prob.
    tax            Float
    admin_status   ADMIN_STATUS @default(pending)
    rating_id      Int?
    is_published   Boolean      @default(false) // handle draft
    // is_deleted     Boolean      @default(false) would need this later on.
    currency       String
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @default(now())

    image           product_image[]
    categories      product_category[]
    promotion       promotion?
    track_promotion track_promotion[]
    //   rating
    // shop
}

model product_image {
    id        Int     @id @default(autoincrement())
    productId String
    url       String
    product   product @relation(fields: [productId], references: [id])
}

model product_category {
    id                 Int    @id @default(autoincrement())
    name               String
    parent_category_id Int?
    product_id         String
    status             STATUS @default(pending)

    product product @relation(fields: [product_id], references: [id])
}

model promo_product {
    id          Int      @id @default(autoincrement())
    promo_id    Int // incorrect type, should be String
    user_id     String
    description String
    created_at  DateTime @default(now())

    user user @relation(fields: [user_id], references: [id])
}

model promotion {
    id             String        @id
    user_id        String
    promotion_type Promo_type    @default(Discount)
    discount_type  Discount_type @default(Percentage)
    quantity       Int
    amount         Float
    product_id     String        @unique
    valid_from     DateTime
    valid_to       DateTime
    min_cart_price Int
    created_at     DateTime      @default(now())
    updated_at     DateTime      @default(now())

    user    user     @relation(fields: [user_id], references: [id])
    product product? @relation(fields: [product_id], references: [id])
}

model revenue {
    id         Int      @id @unique @default(autoincrement())
    user_id    String
    app_id     String
    amount     Float
    created_at DateTime @default(now())

    user user @relation(fields: [user_id], references: [id])
}

model track_promotion {
    id         Int           @id @unique @default(autoincrement()) // incorrect type, should be string.
    product_id String
    user_id    String
    code       Int // this isn't needed
    type       Discount_type // this isn't needed
    created_at DateTime      @default(now())

    user    user     @relation(fields: [user_id], references: [id])
    product product? @relation(fields: [product_id], references: [id])
}

model shop {
    id                  String       @id @unique
    merchant_id         String
    product_id          String // this wont be needed, adding it so i dont get error with prod DB
    name                String
    policy_confirmation Boolean?
    restricted          String       @default("no")
    admin_status        ADMIN_STATUS @default(pending)
    is_deleted          shop_status  @default(active)
    reviewed            Boolean
    rating              Float

    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    merchant user @relation(fields: [merchant_id], references: [id])
}

model store_traffic {
    id         Int      @id @default(autoincrement())
    user_id    String? // not needed
    // shop_id   String same with this, 4 now, just to stick with what we have in prod
    // ip_addr   String // this would be added later on
    created_at DateTime @default(now())
}

model sales_report {
    id         String   @id
    user_id    String
    sales      Int
    // total_sale Decimal  @db.Decimal(10, 2) add this later
    created_at DateTime @default(now())
}

model activity {
    id          String   @id
    action      String
    user_id     String
    title       String
    description String
    created_at  DateTime @default(now())
}
